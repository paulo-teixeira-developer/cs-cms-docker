version: "3"

networks:
  internal:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}-nginx
    restart: always
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./src/api:/var/www/api
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - internal

  php:
    build:
      context: ./
      dockerfile: php.dockerfile
    container_name: ${APP_NAME}-php
    restart: always
    depends_on:
      - mysql
    volumes:
      - ./src/api:/var/www/api
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - internal
    command: bash -c "composer install && php-fpm"

  mysql:
    image: mysql:8
    container_name: ${APP_NAME}-mysql
    restart: always
    tty: true
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - ./database/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    expose:
      - "3306"
    networks:
      - internal

  pma:
    image: phpmyadmin:5.2.1
    container_name: ${APP_NAME}-pma
    restart: always
    ports:
      - "${PMA_PORT}:80"
    depends_on:
      - mysql
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    networks:
      - internal
  
  node:
    build:
      context: ./
      dockerfile: node.dockerfile
    ports:
      - "${VUE_PORT}:5000"
    working_dir: /app
    volumes:
      - ./src/client:/app
    networks:
      - internal
    restart: always
    command: sh -c "npm install && npm run dev -- --host"
      